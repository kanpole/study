#+TITLE: lisp学习

* 关键词或函数
 
 | 关键词                             | 说明                                                               |
 |------------------------------------+--------------------------------------------------------------------|
 | save-excursion                     | 存储还原点,还原缓冲区,位点等操作                                   |
 |------------------------------------+--------------------------------------------------------------------|
 | save-restriction                   | 记录变窄标记                                                       |
 |------------------------------------+--------------------------------------------------------------------|
 | interactive                        | 用于注册函数为emacs可以调用的命令,也就是交互式函数                 |
 |------------------------------------+--------------------------------------------------------------------|
 | :提示字符串                        | 提示字符串,每个参数用\n分割,并且首字母必须代表参数类型             |
 |------------------------------------+--------------------------------------------------------------------|
 | :&optional                         | 可选参数                                                           |
 |------------------------------------+--------------------------------------------------------------------|
 | :b                                 | 一个存在的编辑缓冲区的名字                                         |
 |------------------------------------+--------------------------------------------------------------------|
 | :e                                 | 事件,鼠标动作或功能键动作                                          |
 |------------------------------------+--------------------------------------------------------------------|
 | :f                                 | 一个现有的文件名字                                                 |
 |------------------------------------+--------------------------------------------------------------------|
 | :n                                 | 数字,整数                                                          |
 |------------------------------------+--------------------------------------------------------------------|
 | :s                                 | 字符串                                                             |
 |------------------------------------+--------------------------------------------------------------------|
 | :r                                 | 自动设置文本块的开始和结束位置                                     |
 |------------------------------------+--------------------------------------------------------------------|
 | :p                                 | 传入前缀参量,即C-u 数字                                            |
 |------------------------------------+--------------------------------------------------------------------|
 | :*                                 | 表示内容只读,如果缓冲区只读就产生一个错误信号                      |
 |------------------------------------+--------------------------------------------------------------------|
 | :B                                 | 一个可能不存在的编辑缓冲区名字                                     |
 |------------------------------------+--------------------------------------------------------------------|
 | :F                                 | 一个可能不存在的文件名字                                           |
 |------------------------------------+--------------------------------------------------------------------|
 | :N                                 | 如果有前缀参数,就按前缀参数情况处理,否则就是数字                   |
 |------------------------------------+--------------------------------------------------------------------|
 | :S                                 | 符号                                                               |
 |------------------------------------+--------------------------------------------------------------------|
 | %s                                 | 用前一个的输入替换此位置                                           |
 |------------------------------------+--------------------------------------------------------------------|
 | let                                | 局部绑定变量,防止覆盖上层变量                                      |
 |------------------------------------+--------------------------------------------------------------------|
 | let*                               | 同上,但是可以用来计算局部变量并赋值给后面的值                      |
 |------------------------------------+--------------------------------------------------------------------|
 | progn/prog1                        | 组合多个语句为一个语句,最后/第一个表达式作为返回值                 |
 |------------------------------------+--------------------------------------------------------------------|
 | if                                 | 表达式的ture部分只能是单独一条语句,false部分可以是一个语句块       |
 |------------------------------------+--------------------------------------------------------------------|
 | cond                               | 可以看作是switch                                                   |
 |------------------------------------+--------------------------------------------------------------------|
 | buffer-name/buffer-file-name       | 缓冲区名字/缓冲区指向的文件名                                      |
 |------------------------------------+--------------------------------------------------------------------|
 | current-buffer                     | 缓冲区本身                                                         |
 |------------------------------------+--------------------------------------------------------------------|
 | other-buffer                       | 最近使用过的缓冲区                                                 |
 |------------------------------------+--------------------------------------------------------------------|
 | switch-to-buffer                   | 切换缓冲区                                                         |
 |------------------------------------+--------------------------------------------------------------------|
 | set-buffer                         | 切换操作缓冲区                                                     |
 |------------------------------------+--------------------------------------------------------------------|
 | buffer-size                        | 缓冲区总大小                                                       |
 |------------------------------------+--------------------------------------------------------------------|
 | point                              | 光标当前位置                                                       |
 |------------------------------------+--------------------------------------------------------------------|
 | point-min/max                      | 缓冲区开始和结束                                                   |
 |------------------------------------+--------------------------------------------------------------------|
 | get-buffer-create                  | 根据缓冲区名获取缓冲区,没有则创建                                  |
 |------------------------------------+--------------------------------------------------------------------|
 | insert-buffer-substring            | 插入其他字符串到当前缓冲区                                         |
 |------------------------------------+--------------------------------------------------------------------|
 | erase-buffer                       | 擦除缓冲区                                                         |
 |------------------------------------+--------------------------------------------------------------------|
 | bufferexp                          | 验证是否是一个缓冲区                                               |
 |------------------------------------+--------------------------------------------------------------------|
 | prefix-numeric-value               | 字符串转换为整数,转换失败返回1                                     |
 |------------------------------------+--------------------------------------------------------------------|
 | widen                              | 取消变窄                                                           |
 |------------------------------------+--------------------------------------------------------------------|
 | narrowing-to-region                | 在选中区域开启变窄                                                 |
 |------------------------------------+--------------------------------------------------------------------|
 | car/nth                            | 列表的第一个元素/重复取第一个元素的car n次                         |
 |------------------------------------+--------------------------------------------------------------------|
 | cdr/ntdcdr                         | 列表除第一个元素的剩余部分,是一个列表/重复取一个元素的cdr n此      |
 |------------------------------------+--------------------------------------------------------------------|
 | :cadr/caar/caadr等多种复合名称函数 | 同样可以操作列表                                                   |
 |------------------------------------+--------------------------------------------------------------------|
 | cons                               | 构造列表,或同胞                                                    |
 |------------------------------------+--------------------------------------------------------------------|
 | length                             | 获取列表长度                                                       |
 |------------------------------------+--------------------------------------------------------------------|
 | setcar                             | 设置car                                                            |
 |------------------------------------+--------------------------------------------------------------------|
 | setcdr                             | 设置cdr                                                            |
 |------------------------------------+--------------------------------------------------------------------|
 | kill-region                        | 剪切当前位置到目标位置                                             |
 |------------------------------------+--------------------------------------------------------------------|
 | char-to-string                     | 将字符转换为字符串                                                 |
 |------------------------------------+--------------------------------------------------------------------|
 | search-forward                     | 1,字符串;2,位置;3,错误信号,nil;4,重复计数                          |
 |------------------------------------+--------------------------------------------------------------------|
 | delete-region                      | 删除区域                                                           |
 |------------------------------------+--------------------------------------------------------------------|
 | copy-region-as-kill                | 复制选中区域                                                       |
 |------------------------------------+--------------------------------------------------------------------|
 | describe-variable                  | 查看变量的当前值                                                   |
 |------------------------------------+--------------------------------------------------------------------|
 | edit-options                       | 修改emacs内部变量,临时性的                                         |
 |------------------------------------+--------------------------------------------------------------------|
 | last                               | 返回列表最后一个点对单元,可带参数,表示返回最后n个                  |
 |------------------------------------+--------------------------------------------------------------------|
 | butlast                            | 返回列表的一个副本,最后一个点对单元除外,带有参数时,表示排除最后n个 |
 |------------------------------------+--------------------------------------------------------------------|
 | nbutlast                           | 上面的回收性版本                                                   |
 |------------------------------------+--------------------------------------------------------------------|
 | ldiff                              | 返回列表直到某个给定点对单元的副本                                 |
 |------------------------------------+--------------------------------------------------------------------|
 | tailp                              | 返回真,如果对象是作为列表一部分的点对单元                          |
 |------------------------------------+--------------------------------------------------------------------|
 | list*                              | 构造一个列表,然后链接最后一个列表,而不是指向列表                   |
 |------------------------------------+--------------------------------------------------------------------|
 | make-list                          | 构造n个项的列表,初始值通过:initial-element指定                     |
 |------------------------------------+--------------------------------------------------------------------|
 | revappend                          | 和reverse一样求逆第一个参数,然后再追加到第二个参数上               |
 |------------------------------------+--------------------------------------------------------------------|
 | nreconc                            | 上面的可回收性版本                                                 |
 |------------------------------------+--------------------------------------------------------------------|
 | consp                              | 用来测试一个对象是否是点对单元的谓词                               |
 |------------------------------------+--------------------------------------------------------------------|
 | atom                               | 测试一个对象是否不是点对单元的谓词                                 |
 |------------------------------------+--------------------------------------------------------------------|
 | listp                              | 测试对象是否为点对单元或者nil的谓词                                |
 |------------------------------------+--------------------------------------------------------------------|
 | null                               | 测试对象是否为nil的谓词                                            |
 |------------------------------------+--------------------------------------------------------------------|
 | mapcar                             | 接受一个函数和列表,然后返回由返回值组成的新列表                    |
 |------------------------------------+--------------------------------------------------------------------|
 | maplist                            | 同上,但是传递给函数的是点对单元                                    |
 |------------------------------------+--------------------------------------------------------------------|
 | mapcan                             | 同mapcar,但是会复用原来元素而不是产生新列表                        |
 |------------------------------------+--------------------------------------------------------------------|
 | mapcon                             | 同maplist,也会复用                                                 |
 |------------------------------------+--------------------------------------------------------------------|
 | mapc                               | mapcar/mapcan近亲,只返回第一个列表实参                             |
 |------------------------------------+--------------------------------------------------------------------|
 | mapl                               | maplist/mapcon近亲,同上                                            |
 |------------------------------------+--------------------------------------------------------------------|
 | set                                | 设置变量,如果不想被求值需要使用                                    |
 |------------------------------------+--------------------------------------------------------------------|
 | setq                               | 同时设置多个变量,并且被赋值的变量名不需要加`                       |
 |------------------------------------+--------------------------------------------------------------------|
 | setq-default                       | 为缓冲区,设置值                                                    |
 |------------------------------------+--------------------------------------------------------------------|
 | concat                             | 链接字符串                                                         |
 |------------------------------------+--------------------------------------------------------------------|
 | while                              | 循环                                                               |
 |------------------------------------+--------------------------------------------------------------------|
 | eobp                               | 当位点位于缓冲区末尾时,返回真                                      |
 |------------------------------------+--------------------------------------------------------------------|
 | looking-at                         | 当紧跟在位点之后的文本与传入的正则匹配时返回真                     |
 |------------------------------------+--------------------------------------------------------------------|
 | match-beginning                    | 返回最后一个正则匹配的文本开始处,参数一般为0                       |
 |------------------------------------+--------------------------------------------------------------------|
 | re-/search-forward                 | 根据正则搜索                                                       |
 |------------------------------------+--------------------------------------------------------------------|
 | find-file-noselect                 | 打开一个文件                                                       |
 |------------------------------------+--------------------------------------------------------------------|
 | sort                               | 对列表排序                                                         |
 |------------------------------------+--------------------------------------------------------------------|
 | nreverse                           | 翻转列表,不会创建新列表                                            |
 |------------------------------------+--------------------------------------------------------------------|
 | reverse                            | 会创建新列表,新元素                                                |
 |------------------------------------+--------------------------------------------------------------------|
 | :一般带N开头的函数都是其复用型版本 |                                                                    |
 |------------------------------------+--------------------------------------------------------------------|
 | append                             | 添加一个元素到列表                                                 |
 |------------------------------------+--------------------------------------------------------------------|
 | insert-rectangle                   | 向区域内插入内容                                                   |
 |------------------------------------+--------------------------------------------------------------------|
 | sit-for                            | 传入0,代表停下来,防止假死                                          |
 |------------------------------------+--------------------------------------------------------------------|

* 函数定义
  1) 函数名
  2) 参量列表
  3) 表述文档
  4) 是否设置交互
  5) 函数主题
     #+BEGIN_SRC elisp
     (defun my-buffer-size (buffer start end)
       "this is calc buffer function"
       (interactive "BEnter an buffer\nr")
       (message "the %s is %d and %d" buffer start end)
     )
     #+END_SRC

** 特殊函数,能改变求值顺序,或执行环境
   
   | 关键字                                        | 用法                                                                                                                                                |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | defun                                         | 定义函数                                                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | &whole                                        | 若需要必须是第一个参数,它绑定整个参数表达式,然后会像没有该关键字一样按正常操作赋值                                                                  |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | &optional                                     | 设定可选参数,绑定参数时最后才绑定，其后的部分都是可选参数                                                                                           |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | &optional (a val val-p)                       | 指定可选参f数的默认值,此默认值可以引用前面参数的值,其中val-p如果为val传入参数，则val-p的值会自动设为t否则nil                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | &rest/&body宏形参可以使用                     | 可变参数,在可选参数之后，传入的参数会被收集到其后的一个列表里                                                                                       |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | &key name                                     | 关键字参数,在rest之后,可以指定函数的参数                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | &key ((:name1 a) (:name2 b))                  | 此形式可以指定形参对应实参传入时使用的名字                                                                                                          |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | (fun :name val)                               | 传入关键字参数，对应的关键字将被赋值为val                                                                                                           |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | defmacro                                      | 定义宏,可以解构形参,即一个形参是列表的话,可以将列表分解                                                                                             |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | gensym                                        | 产生一个从未被使用的唯一符号                                                                                                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | `                                             | 与'一样阻止表达式求值,但是其后列表中任何以 ","分割的表达式都会被求值                                                                                |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :,                                            | 在展开期间,就对后面的表达式求值                                                                                                                     |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :,@                                           | 扩散内部列表到外部                                                                                                                                  |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | quote                                         | 引用,不求值                                                                                                                                         |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | eq                                            | 判断值是否相同,不关心类型                                                                                                                           |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | eql                                           | 判断值和类型是否相同                                                                                                                                |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | equal                                         | 对于向量或者路径,比eql更宽松                                                                                                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | equalp                                        | 提供了忽略大小写的等价性,最宽泛                                                                                                                     |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | function/#'                                   | 获取函数对象                                                                                                                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | (funcall #‘+ 1 2 3)                          | 通过函数对象调用函数，用于指定确切实参数量的情况                                                                                                    |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | (apply #'print #'add (1 2 3)                  | 同上，但是它期望参数是一个列表,并且可以传入多个函数对象,它将传入的函数应用在列表的每一个值上,从右到左依次应用函数，以及使用函数的返回值继续应用函数 |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | (lambda (x y) (+ x y))                        | LAMBDA表达式                                                                                                                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | defvar                                        | 只给未定义过的变量赋值                                                                                                                              |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | defpatameter                                  | 与defvar不同,即使已经定义过也会赋值                                                                                                                 |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | makunbound                                    | 将符号声明为未绑定的，也就是清除符号绑定                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | defconst                                      | 定义常量                                                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | setf                                          | 通常用于对位置赋值,是一个宏,可以根据赋值的类型来选择合适的操作,可以多重赋值                                                                         |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | aref                                          | 数组访问                                                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | gethash                                       | 哈希表查找                                                                                                                                          |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | incf/decf                                     | 自增/自减                                                                                                                                           |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | floor                                         | 向负无穷截断                                                                                                                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | ceiling                                       | 向正无穷截断                                                                                                                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | truncate                                      | 向零截断                                                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | round                                         | 舍入到最近整数,如果是.5则向最接近的偶数舍入                                                                                                         |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | mod                                           | 取余                                                                                                                                                |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | 1+/1-                                         | 与incf/decf不同,它们返回一个新值                                                                                                                    |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | zerop/minusp/plusp                            | 用来测试单一实数等于/小于/大于                                                                                                                      |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | evenp/oddp                                    | 偶数/奇数                                                                                                                                           |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | char-equal                                    | 对比两个字符,忽略大小                                                                                                                               |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | string=/<....                                 | 字符串比较函数                                                                                                                                      |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | elt                                           | 通用序列元素访问函数                                                                                                                                |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | aref                                          | 通用数组元素访问函数                                                                                                                                |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | vactor                                        | 生成向量/数组                                                                                                                                       |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | make-vactor                                   | 创建指定长度的向量                                                                                                                                  |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | first/rest                                    | 分别是car/cdr的同义词                                                                                                                               |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | defgeneric                                    | 定义广义函数                                                                                                                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | ：argument-precedence-order                   | 可以控制比较特化符的时机                                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | ：method-combination                          | 定义方法组合                                                                                                                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | ::                                            | most-specific-last逆转方法组合的顺序                                                                                                                |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | define-method-combination                     | ？？                                                                                                                                                |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | defmethod                                     | 定义方法                                                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | call-netx-method                              | 调用父类方法                                                                                                                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | defclass                                      | 定义类                                                                                                                                              |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :initarg                                      | 设定可以在创建实例时指定的变量名                                                                                                                    |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :initform                                     | 指定默认值表达式                                                                                                                                    |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :read/:writer                                 | 为变量定义读取和写入函数                                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :accessor                                     | 同时定义读取和写入函数                                                                                                                              |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :documentation                                | 定义变量描述符                                                                                                                                      |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :allocation  :instance/:class                 | 默认为非静态,当为class时变量就相当于静态                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | with-slots                                    | 相当于类的let                                                                                                                                       |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | with-accessors                                | 相当于类的函数的let                                                                                                                                 |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | (defun (setf customer-name) (name class)... ) | 定义setf函数                                                                                                                                        |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | defstruct                                     | 定义结构                                                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | make-instance                                 | 创建类实例                                                                                                                                          |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | slot-value                                    | 获取变量的值,配合setf可以设置变量的值                                                                                                               |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | find-class                                    | 获取一个类                                                                                                                                          |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | class-of                                      | 获取实例对应的类                                                                                                                                    |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | flet/labels                                   | 定义局部函数,它们的区别就和let与let*的区别一样                                                                                                      |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | macrolet                                      | 定义局部宏                                                                                                                                          |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | symbol-macrolet                               | 定义局部的符号宏                                                                                                                                    |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | block/return-from                             | 控制返回,可以使用nil作为block的名字                                                                                                                 |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | tagbody/go                                    | 类似goto                                                                                                                                            |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | catch/throw                                   | 首先创建一个对象,然后可以catch该对象,当throw该对象时,将从catch返回                                                                                  |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | unwind-protect                                | 等价于try/finally形式                                                                                                                               |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | multiple-value-call/multiple-value-bind       | 类似于funcall,可以得到多值,后者可以绑定多值                                                                                                         |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | values/values-list                            | 返回多值/将列表拆分为多值返回                                                                                                                       |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | load                                          | 加载文件并求值所有顶层形式                                                                                                                          |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | compile-file                                  | 编译一个lisp源文件                                                                                                                                  |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :load时包含compile-file                       |                                                                                                                                                     |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | eval-when                                     | 控制load的求值时间                                                                                                                                  |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :compile-toplevel/:load-toplevel :execute     |                                                                                                                                                     |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | loat-time-value                               | 控制表达式的的求值,在加载时,或编译时仅求值一次,也就是一次读取后就固化值                                                                             |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | progv                                         | 类似progn但是附带一个类似let*形式的变量列表                                                                                                         |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | locally                                       | ?                                                                                                                                                   |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | the                                           | ?                                                                                                                                                   |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | symbol-name/value                             | 获取符号的名字/值                                                                                                                                   |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | intern                                        | 无论存不存在都会返回一个符号,没有则添加一个到包里                                                                                                   |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   | :/::                                          | 单冒号只能使用明确导出的符号,双冒号可以使用任意符号                                                                                                 |
   |-----------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
   
   
** 关键函数
   | 函数                                               | 用法                                                                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | format                                             | 格式化字符串,可能和elisp不同                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | push                                               | 添加新数据到变量                                                                        |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | pushnew                                            |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | pop                                                |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | rotatef                                            | 交换两个变量的值,返回nil                                                                |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | shiftf                                             | 左移参数的值                                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | dolist                                             | 自动循环取值                                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | getf                                               | 获取变量指定字段的值                                                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | *:read-line                                        | 读取一行                                                                                |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | *:force-output                                     | 请求输入                                                                                |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | y-or-n-p                                           | 请求回答y或n,用于测试                                                                   |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | *:with-open-file                                   | 打开一个文件                                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | *:with-standard-io-syntax                          | 设定print的标准值,用于重置print的行为                                                   |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | setf                                               | 将第一个参数,设置为第二个参数的求值                                                     |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | remove-if-not/remove-if                            | 返回与谓词匹配的新列表                                                                  |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | equal                                              | 判断字符串值是否相等                                                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | macroexpand-1                                      | 查看一个宏展开后的结果                                                                  |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | documentation                                      | 获取函数描述                                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | and/or/not                                         | 与/或/非/                                                                               |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | do/do*                                             | 基础的结构化循环,可以自由控制变量和返回结果,do*形式时后续变量可以使用前面的变量求值得到 |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | dolist                                             | 循环操作列表                                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | dotimes                                            | 计数循环,指定一个整数,从0开始递增                                                       |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | loop                                               | 简化版无条件                                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | (loop for x from 1 to 10 collecting i)             | 复杂版loop                                                                              |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :across                                            |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :and                                               |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :below                                             |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :collecting                                        |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :counting                                          |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :finally                                           |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :for                                               |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :from                                              |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :summing                                           |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :then                                              |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :to                                                |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | append                                             | 添加元素到列表,新返回的列表,会服用后面的一个列表                                        |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | nconc                                              | 同上,但是会全部复用,即直接链接第一个列表与第二个列表                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | return                                             | 返回                                                                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | sleep-for                                          | 暂停n秒                                                                                 |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | aset                                               | 设置指定向量位置的值                                                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :几乎所有的序列操作都可以使用length/elt/setf的组合 |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | count                                              | 统计某项出现的次数                                                                      |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | find                                               | 查找某项                                                                                |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | remove                                             | 移除列表中的某项,返回新列表                                                             |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | remove-duplicates                                  |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | substitute                                         | 将列表中的某一项替换后返回,返回新列表                                                   |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :上面函数前可以加n表示复用型版本                   |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :上面这些参数的可选关键字,并且都有 if/if-not变体   |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :test                                              | 用来传入需要使用的测试函数                                                              |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :key                                               | 传入用来抽解列表元素的函数,供其他操作函数使用                                           |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :start                                             | 起始索引(含)                                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :end                                               | 终止索引(不含),nil表示到序列结尾                                                        |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :from-end                                          | 如果为真,表示倒叙遍历                                                                   |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :count                                             | 代表替换或移除的个数,nil代表全面                                                        |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | copy-seq                                           | 复制一个序列                                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | reverse                                            | 反转序列,返回新序列                                                                     |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | concatenate                                        | 根据原参数,返回一个指定类型的数据                                                       |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | sort                                               | 传入列表和谓词进行破坏性排序                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | stable-sort                                        | 可以保证在元素相同时,不会改动元素                                                       |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | merge                                              | 传入两个列表和一个谓词,来合并列表                                                       |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | subseq                                             | 从序列中搜索指定索引的元素,支持setf,但不会扩大或缩小序列                                |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | search                                             | 搜索字符串,返回索引                                                                     |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | fill                                               | 用一个值填充序列                                                                        |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | mismatch                                           | 返回第一个不相同的元素索引                                                              |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | every                                              | 有一个为假就返回假                                                                      |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | some                                               | 有一个为真就返回真                                                                      |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | notany                                             | 全部为假就返回假                                                                        |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | notevery                                           | 有一个失败时返回真,全部为真时返回假                                                     |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | map                                                | 传入类型与谓词,以及两个列表,返回相应类型的数据                                          |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | reduce                                             | 可以计算列表的总和等,将谓词连续应用到列表中相邻的元素上并保存,然后继续取下一个元素      |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | make-hash-table                                    | 返回一个hash表                                                                          |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | :test ;eql,equal,eq,equalp                         |                                                                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | gethash                                            | 访问hash表元素                                                                          |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | multiple-value-bind                                | 获取gethash返回的双返回值                                                               |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | remhash                                            | 清除hash表指定的键值对                                                                  |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | clrhash                                            | 清除hash表所有的键值对                                                                  |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | maphash                                            | 对hash表上的所有键值调用一次该函数                                                      |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | copy-list                                          | 仅仅复制列表层面,也就是浅复制                                                           |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | copy-tree                                          | 深入列表中的每个元素或者列表,也就是深复制                                               |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | tree-equal                                         | 深比较:test 用于传入测试函数                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | adjoin                                             | 构造集合,返回新的列表                                                                   |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | member/-if...                                      | 用来测试一个给定项是否在一个集合里,返回点对单元                                         |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | intersection                                       | 接受两个列表和关键字参数,并返回一个新列表,返回交集                                      |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | union                                              | 返回并集                                                                                |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | set-difference                                     | 返回第二个参数的补集                                                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | set-exclusive-or                                   | 返回异集                                                                                |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | subsetp                                            | 测试第一个列表是否是第二个列表的子集                                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | assoc                                              | 根据一个car匹配的键,在点对列表中寻找匹配的项                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | acons                                              | 向一个alist中添加新点对单元                                                             |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | rassoc                                             | 使用cdr作为键进行反向查询                                                               |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | pairlts                                            | 使用两个列表来构建一个alist                                                             |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | plist                                              | 只能使用getf查询,就是正常列表而已                                                       |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | remf                                               | 从plist中移除一个键值对                                                                 |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | symbol-plist                                       | 获取符号对象相关联的plist                                                               |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | remprop                                            | 从一个符号的plist中移除属性                                                             |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | destructuring-bind                                 | 用于拆分列表,即在参数中可以使用列表,然后自动拆解对应                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | #:open                                             | 打开字符流                                                                              |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | #:close                                            | 关闭                                                                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | read                                               | 读取一个表达式                                                                          |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | read-char                                          | 读取一个字符                                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | print                                              | 打印出的表达式可以被read读取                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | #:read-byte                                        | 读取字节                                                                                |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | #:read-sequence                                    | 用流中的字符填充序列                                                                    |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | #:write-char/write-string                          | 写数据                                                                                  |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | terpri                                             | 打印一个换行符                                                                          |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | fresh-line                                         | 保证只打印一次换行                                                                      |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | prin1                                              | 只打印表达式                                                                            |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | pprint                                             | 会打印并美化表达式                                                                      |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | princ                                              | 打印字符串时,不带引号                                                                   |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | file-exists-p                                      | 测试目录是否存在                                                                        |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | list-directory                                     | 列出系统中的文件                                                                        |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   | delete-file/rename-file                            | 删除/和重命名                                                                           |
   |----------------------------------------------------+-----------------------------------------------------------------------------------------|
   

** 语法规则
   1) 闭包，是指将变量封闭在一个匿名的函数内，然后返回这个匿名的函数对象，此变量将一直存在，但是对外部不可见,elisp似乎实现的不太好
      1) 闭包,在一个函数中,定义了局部变量,然后又定义了一个局部函数引用这个变量,最后将函数返回,此时变量就变成了永久局部变量,其函数也是
   
  

